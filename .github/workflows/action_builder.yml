name: action-builder

on:
  pull_request:
    branches:
      - "feature/*"
      - main
jobs:
  run_actions:
    name: Run Actions on pull request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - uses: jitterbit/get-changed-files@v1
        id: abc
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Getting File info
        run: |
          echo "${{ steps.abc.outputs.added }}"
          echo "${{ steps.abc.outputs.modified }}"
      - name: Get PR info
        run: |
          echo "${{ github.event.issue.number }}"
          echo "${{ github.event.pull_request.body }}"
          echo "${{ github.event.pull_request.title }}"
          echo "${{ github.event.pull_request.head.ref }}"
      - name: Run Action Builder
        if: ${{ always() }}
        uses: oraclecloudbricks/action_fireup@98987c2823c08e864ab157d3ba14766ca3e36093
        with:
          files_added: ${{ steps.abc.outputs.added }}
          files_modified: ${{ steps.abc.outputs.modified }}
          pr_body: ${{ github.event.pull_request.body }}
          branch_name: ${{ github.event.pull_request.head.ref }}
      - name: Overall analysis
        id: analysis
        run: |
          echo "::set-output name=read_me_action_outcome::$(jq '.[] | select(.action_name=="check_readme") | .passed' results.json)"
          echo "::set-output name=test_suite_action_outcome::$(jq '.[] | select(.action_name=="check_test_suite") | .passed' results.json)"
          echo "::set-output name=statics_action_outcome::$(jq '.[] | select(.action_name=="check_statics") | .passed' results.json)"
          echo "::set-output name=headers_action_outcome::$(jq '.[] | select(.action_name=="check_header") | .passed' results.json)"
          echo "::set-output name=pr_tests_action_outcome::$(jq '.[] | select(.action_name=="check_pr_tests") | .passed' results.json)"
          echo "::set-output name=helpers_action_outcome::$(jq '.[] | select(.action_name=="check_helpers") | .passed' results.json)"
          cat results.json
      - name: Comment if analysis finds missing readme
        if: ${{ steps.analysis.outputs.read_me_action_outcome == 0}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing README**
            :exclamation: The README file seems to be missing. Please add it.
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment if analysis finds missing test
        if: ${{ steps.analysis.outputs.test_suite_action_outcome == 0}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing TEST SUITE**
            :exclamation: The test suite for the corresponding class seems to be missing. Please add it.
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment if analysis finds missing statics entry
        if: ${{ steps.analysis.outputs.statics_action_outcome == 0}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing STATICS ENTRY**
            :exclamation: The Statics.py file is missing entries. Please update it.
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment if analysis finds wrong headers
        if: ${{ steps.analysis.outputs.headers_action_outcome == 0}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Wrong HEADERS FOUND**
            :exclamation: The class file added contains the wrong headers. Please update it.
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment if analysis finds failed or missing PR Tests
        if: ${{ steps.analysis.outputs.pr_tests_action_outcome == 0}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing PR TESTS**
            :exclamation: Some of the tests included in the PR are either missing or have failed. Please review the PR body.
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment if analysis finds missing retry strategy in helper
        if: ${{ steps.analysis.outputs.helpers_action_outcome == 0}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing RETRY STRATEGY**
            :exclamation: The helper you added in helper.py seems to be missing a retry strategy. Please add it.
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify Linked Issue
        uses: hattan/verify-linked-issue-action@v1.1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: |
            :no_entry: **FAILURE: There is no linked issue to this PR**
            :exclamation: Please link this PR to an issue.

      - name: Fail job if Exeption appears
        id: failure
        if: ${{ always() &&
          (steps.analysis.outputs.read_me_action_outcome == 0 ||
          steps.analysis.outputs.test_suite_action_outcome == 0 ||
          steps.analysis.outputs.statics_action_outcome == 0 ||
          steps.analysis.outputs.headers_action_outcome == 0 ||
          steps.analysis.outputs.pr_tests_action_outcome == 0 ||
          steps.analysis.outputs.helpers_action_outcome == 0 ) }}
        run: exit 1

      - name: Comment if all actions checks passed
        if: ${{ (steps.analysis.outputs.read_me_action_outcome == 0 ||
          steps.analysis.outputs.test_suite_action_outcome == 0 ||
          steps.analysis.outputs.statics_action_outcome == 0 ||
          steps.analysis.outputs.headers_action_outcome == 0 ||
          steps.analysis.outputs.pr_tests_action_outcome == 0 ||
          steps.analysis.outputs.helpers_action_outcome == 0) }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :white_check_mark: **SUCCESS: All actions passed**
            :sparkles: The Branch can now be merged!
          repo-token: ${{ secrets.GITHUB_TOKEN }}