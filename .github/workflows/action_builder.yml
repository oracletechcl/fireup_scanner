name: action-builder

on:
  pull_request:

jobs:
  setup-actions:
    if: ${{ contains(github.event.pull_request.head.ref, 'feature/') }}
    name: Setup Action Builder
    runs-on: ubuntu-latest
    outputs:
      read_me_action_outcome: ${{ steps.analysis.outputs.read_me_action_outcome }}
      test_suite_action_outcome: ${{ steps.analysis.outputs.test_suite_action_outcome }}
      statics_action_outcome: ${{ steps.analysis.outputs.statics_action_outcome }}
      headers_action_outcome: ${{ steps.analysis.outputs.headers_action_outcome }}
      pr_tests_action_outcome: ${{ steps.analysis.outputs.pr_tests_action_outcome }}
      helpers_action_outcome: ${{ steps.analysis.outputs.helpers_action_outcome }}
      read_me_action_msg: ${{ steps.errors.outputs.read_me_action_msg }}
      test_suite_action_msg: ${{ steps.errors.outputs.test_suite_action_msg }}
      statics_action_msg: ${{ steps.errors.outputs.statics_action_msg }}
      headers_action_msg: ${{ steps.errors.outputs.headers_action_msg }}
      pr_tests_action_msg: ${{ steps.errors.outputs.pr_tests_action_msg }}
      helpers_action_msg: ${{ steps.errors.outputs.helpers_action_msg }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - uses: jitterbit/get-changed-files@v1
        id: abc
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Getting File info
        run: |
          echo "${{ steps.abc.outputs.added }}"
          echo "${{ steps.abc.outputs.modified }}"
      - name: Get PR info
        run: |
          echo "${{ github.event.issue.number }}"
          echo "${{ github.event.pull_request.body }}"
          echo "${{ github.event.pull_request.title }}"
          echo "${{ github.event.pull_request.head.ref }}"
      - name: Run Action Builder
        if: ${{ always() }}
        uses: oraclecloudbricks/action_fireup@facc657488ec832d4c773d2f4b8bc1b5c6b32306
        with:
          files_added: ${{ steps.abc.outputs.added }}
          files_modified: ${{ steps.abc.outputs.modified }}
          pr_body: ${{ github.event.pull_request.body }}
          branch_name: ${{ github.event.pull_request.head.ref }}
      - name: Overall analysis
        if: ${{ always() }}
        id: analysis
        run: |
          echo "::set-output name=read_me_action_outcome::$(jq '.[] | select(.action_name=="check_readme") | .passed' results.json)"
          echo "::set-output name=test_suite_action_outcome::$(jq '.[] | select(.action_name=="check_test_suite") | .passed' results.json)"
          echo "::set-output name=statics_action_outcome::$(jq '.[] | select(.action_name=="check_statics") | .passed' results.json)"
          echo "::set-output name=headers_action_outcome::$(jq '.[] | select(.action_name=="check_header") | .passed' results.json)"
          echo "::set-output name=pr_tests_action_outcome::$(jq '.[] | select(.action_name=="check_pr_tests") | .passed' results.json)"
          echo "::set-output name=helpers_action_outcome::$(jq '.[] | select(.action_name=="check_helpers") | .passed' results.json)"
          cat results.json
      - name: Define Errors
        if: ${{ always() }}
        id: errors
        run: |
          echo "::set-output name=read_me_action_msg::$(jq '.[] | select(.action_name=="check_readme") | .description' results.json)"
          echo "::set-output name=test_suite_action_msg::$(jq '.[] | select(.action_name=="check_test_suite") | .description' results.json)"
          echo "::set-output name=statics_action_msg::$(jq '.[] | select(.action_name=="check_statics") | .description' results.json)"
          echo "::set-output name=headers_action_msg::$(jq '.[] | select(.action_name=="check_header") | .description' results.json)"
          echo "::set-output name=pr_tests_action_msg::$(jq '.[] | select(.action_name=="check_pr_tests") | .description' results.json)"
          echo "::set-output name=helpers_action_msg::$(jq '.[] | select(.action_name=="check_helpers") | .description' results.json)"
      - name: Printing Errors Messages for Debugging
        if: ${{ always() }}
        run: |
          echo "${{ steps.errors.outputs.read_me_action_msg }}"
          echo "${{ steps.errors.outputs.test_suite_action_msg }}"
          echo "${{ steps.errors.outputs.statics_action_msg }}"
          echo "${{ steps.errors.outputs.headers_action_msg }}"
          echo "${{ steps.errors.outputs.pr_tests_action_msg }}"
          echo "${{ steps.errors.outputs.helpers_action_msg }}"

  check-readme:
    if: ${{ contains(github.event.pull_request.head.ref, 'feature/') }}
    name: Check README.md
    runs-on: ubuntu-latest
    needs: setup-actions
    steps:
      - name: Getting variables
        run: |
          echo "${{ needs.setup-actions.outputs.read_me_action_outcome }}"
          echo "${{ needs.setup-actions.outputs.read_me_action_msg }}"
      - name: Comment if analysis finds missing readme
        if: ${{ needs.setup-actions.outputs.read_me_action_outcome == 0}}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing README**
            :exclamation: ***The README file seems to be missing. Please add it.***
            ***Error Message:***
            *${{ needs.setup-actions.outputs.read_me_action_msg }}*
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail job if Exeption appears
        if: ${{ needs.setup-actions.outputs.read_me_action_outcome == 0 }}
        run: exit 1

  check-test-suite:
    if: ${{ contains(github.event.pull_request.head.ref, 'feature/') }}
    name: Check Test Suite
    runs-on: ubuntu-latest
    needs: setup-actions
    steps:
      - name: Getting variables
        run: |
          echo "${{ needs.setup-actions.outputs.test_suite_action_outcome }}"
          echo "${{ needs.setup-actions.outputs.test_suite_action_msg }}"
      - name: Comment if analysis finds missing test
        if: ${{ needs.setup-actions.outputs.test_suite_action_outcome == 0 }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing TEST SUITE**
            :exclamation: ***The test suite for the corresponding class seems to be missing. Please add it.***
            ***Error message:***
            *${{ needs.setup-actions.outputs.test_suite_action_msg }}*
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail job if Exeption appears
        if: ${{ needs.setup-actions.outputs.test_suite_action_outcome == 0 }}
        run: exit 1

  check-statics:
    if: ${{ contains(github.event.pull_request.head.ref, 'feature/') }}
    name: Check Statics Entry
    runs-on: ubuntu-latest
    needs: setup-actions
    steps:
      - name: Getting variables
        run: |
          echo "${{ needs.setup-actions.outputs.statics_action_outcome }}"
          echo "${{ needs.setup-actions.outputs.statics_action_msg }}"
      - name: Comment if analysis finds missing statics entry
        if: ${{ needs.setup-actions.outputs.statics_action_outcome == 0 }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing STATICS ENTRY**
            :exclamation: ***The Statics.py file is missing entries. Please update it.***
            ***Error message:***
            *${{ needs.setup-actions.outputs.statics_action_msg }}*
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail job if Exeption appears
        if: ${{ needs.setup-actions.outputs.statics_action_outcome == 0 }}
        run: exit 1

  check-headers:
    if: ${{ contains(github.event.pull_request.head.ref, 'feature/') }}
    name: Check Headers
    runs-on: ubuntu-latest
    needs: setup-actions
    steps:
      - name: Getting variables
        run: |
          echo "${{ needs.setup-actions.outputs.headers_action_outcome }}"
          echo "${{ needs.setup-actions.outputs.headers_action_msg }}"
      - name: Comment if analysis finds wrong headers
        if: ${{ needs.setup-actions.outputs.headers_action_outcome == 0 }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Wrong HEADERS FOUND**
            :exclamation: ***The class file added contains the wrong headers. Please update it.***
            ***Error message:***
            *${{ needs.setup-actions.outputs.headers_action_msg }}*
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail job if Exeption appears
        if: ${{ needs.setup-actions.outputs.headers_action_outcome == 0 }}
        run: exit 1

  check-pr-tests:
    if: ${{ contains(github.event.pull_request.head.ref, 'feature/') }}
    name: Check PR Tests
    runs-on: ubuntu-latest
    needs: setup-actions
    steps:
      - name: Getting variables
        run: |
          echo "${{ needs.setup-actions.outputs.pr_tests_action_outcome }}"
          echo "${{ needs.setup-actions.outputs.pr_tests_action_msg }}"
      - name: Comment if analysis finds failed or missing PR Tests
        if: ${{ needs.setup-actions.outputs.pr_tests_action_outcome == 0 }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing PR TESTS**
            :exclamation: ***Some of the tests included in the PR are either missing or have failed. Please review the PR body.***
            ***Error message:***
            *${{ needs.setup-actions.outputs.pr_tests_action_msg }}*
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail job if Exeption appears
        if: ${{ needs.setup-actions.outputs.pr_tests_action_outcome == 0 }}
        run: exit 1

  check-helpers:
    if: ${{ contains(github.event.pull_request.head.ref, 'feature/') }}
    name: Check Helpers
    runs-on: ubuntu-latest
    needs: setup-actions
    steps:
      - name: Getting variables
        run: |
          echo "${{ needs.setup-actions.outputs.helpers_action_outcome }}"
          echo "${{ needs.setup-actions.outputs.helpers_action_msg }}"
      - name: Comment if analysis finds missing retry strategy in helper
        if: ${{ needs.setup-actions.outputs.helpers_action_outcome == 0 }}
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :no_entry: **FAILURE: Missing RETRY STRATEGY**
            :exclamation: ***The helper you added in helper.py seems to be missing a retry strategy. Please add it.***
            ***Error message:***
            *${{ needs.setup-actions.outputs.helpers_action_msg }}*
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fail job if Exeption appears
        if: ${{ needs.setup-actions.outputs.helpers_action_outcome == 0 }}
        run: exit 1

  run_others:
    if: ${{ always() && !contains(github.event.pull_request.head.ref, 'feature/')}}
    name: Run Other Actions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2